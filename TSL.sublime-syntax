%YAML 1.2
---
name: Text Scraping Language
description: Intuitive Text Scraping Language parser for Python
scopeName: source.tsl
fileTypes: [tsl]
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - tsl
scope: source.tsl

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: directives
    - include: numbers
    - include: ordinals
    - include: counts
    - include: strings
    - include: templates
    - include: clauses
    - include: conjunctions
    - include: keywords

  directives:
    - match: '---|\b(bash|be|calculate|change|combine|count|empty|extract|find all|for every|log|remember|remove|replace|reverse|run|save|select|sort|split|take|unique|write)\s'
      scope: entity.name.function.tsl

  numbers:
    - match: '\b(-)?[0-9.]+\b'
      scope:  string.quoted.double.tsl

  ordinals:
    - match: '(\s+|\b|^)((but-la|fir|la)st|(2|seco)nd|(3|thi)rd|(\d+|four|fif|six|seven|eig|nine|ten)th|last)(\s+|$)'
      scope:  string.quoted.double.tsl

  counts:
    - match: '(\s+|\b|^)(zero|null|n?one|two|three|four|five|six|seven|eight|nine|ten|dozen)\b'
      scope: string.quoted.double.tsl

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.tsl
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.tsl
    - match: '\.'
      scope: constant.character.escape.tsl
    - include: templates
    - match: '"'
      scope: punctuation.definition.string.end.tsl
      pop: true

  templates:
    - match: '\[[a-zA-Z\_0-9\-]+\]'
      scope: constant.character.escape.tsl

  comments:
    - match: '^\s*#'
      scope: punctuation.definition.comment.tsl
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.hash.tsl
        - match: $\n?
          pop: true

  clauses:
    - match: '\b(in|as|from|to|until|with|by|of|without|where|between)\s'
      scope: keyword.control.tsl

  conjunctions:
    - match: '\s(and|or)\s'
      scope: punctuation.definition.comment.tsl

  keywords:
    - match: '\b(lines|files|folders|results|all|timecodes?|filenames?|extensions?)\s'
      scope: string.quoted.double